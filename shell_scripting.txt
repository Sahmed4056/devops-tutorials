#############################################################################
		Day-1
#############################################################################
Shell script used to automate repetative tasks in Unix.
What is shell script?
It's a text used to write system level commands in sequence inorder to achieve our requirement.


usecase:
-----------
Find the 
	- Version of httpd
	- status of httpd service
	- Port listening {cat /etc/httpd/conf/httpd.conf | grep -i ^Listen}


#!/bin/bash
httpd --version
systemctl status httpd
cat /etc/httpd/conf/httpd.conf | grep -i ^Listen


The above shell script is a simple shell script, we can enhance this script using,
- Variables
- Filters like grep, awk, tail..etc commands
- loops
- Conditional statements & many more


#!/bin/bash
httpd_v=`httpd --version | awk ${print $3}`
httpd_status=`systemctl status httpd | grep Active | awk ${print $2}`
httpd_port=`cat /etc/httpd/conf/httpd.conf | grep -i ^Listen | awk ${print $2}`
echo "The version of httpd is: $httpd_v"
echo "The status of httpd is: $httpd_status"
echo "The port of httpd is: ${httpd_port}"


chmod +x httpd_details.sh
./httpd_details.sh

1. Whenever we execute any command/script on the terminal it will reach to operating system & the    opearating system reacts to the command with the program called shell.

2. In our unix world we have different types of shells. To see these different shells
   cat /etc/shells

	/bin/sh
	/bin/bash
	/bin/zsh
	/bin/ksh

3. a. In this bash is the advanced & latest shell.
   b. Now a days almost by default all the flavours of unix operating systems works with bash shell          programming.
   c. Because of this reason bash scripting we call.
   d. There is no other major difference in writing scripting in other shells, just bash is the latest       & advanced shell. 
==================================================

General purpose in Linux
a. pwd  --> Prints the current working directory
   
   whatis --> Simple description about the command	
		whatis pwd
   
   man --> Display description of command & usage of command
	man pwd

b. whoami --> Find login user
c. id --> Print the user id details
d. clear --> Clear the screen
e. touch --> Used to create empty file
	  touch 1.out 2.out

	File create options
		touch <filename>
		echo "Hello" > samp.txt
		echo "world" >> samp.txt
	
	To view data in filename
		cat filename

f. ls   --> List the files
	ls -l  {list the files with full details like permissions, owner,group, size & file name}
	ls -all {List the hidden files also}
	ls -ltr {List the files in ascending order based on timestamp}

g. mkdir --> Creates a direcotry
	mkdir dir1 dir2
	mkdir -p dir3/dir4/dir5

g. cd   --> Get inside of directory

h. date --> with formats
	 date
	 date --help
	 date +%d
	 date +%m
	 date +%Y
	 date +%d%m%Y

i. Rename file/directory
	mv <src_file> <dest_file>
	
   Move file into directory
	mv <src_file> <directory>
	
j. Copy file/directory directory
	cp <src_file> <dir>
	cp -r <src_dir> <dest_dir>
	
k. Delete file
	rm <filename>
	rmdir <dir>
	rm -r <dir>
l. WC
	cat <file> | wc -l
	cat <file> | wc -w
	cat <file> | wc -c
	
m. head & tail
	cat <file> | head -2
	cat <file> | tail -2


#############################################################################
		Day-2
#############################################################################
n. grep - This filter search a particular pattern in a file & displays all the lines that matches to             the pattern.

	unix is great os. unix is opensource. unix is free os.
	Unix linux which one you choose.
	uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.
	
	cat <file> | grep "unix"
	cat <file> | grep -i "unix"
	cat <file> | grep -n "unix" {Displays the lines containing unix string & show the line number}
	cat <file> | grep -v "unix" {Displays the lines not containing unix string}
	cat <file> | grep "^unix"
	cat <file> | grep "unix*"
	cat temp.txt | egrep 'great|operating'
	
o. more <file>

p. sort - Sort command used to sort a file & arranges records in particular order.
	cat > file.txt
abhishek
chitransh
satish
rajan
naveen
divyam
harsh

	sort file.txt
	abhishek
	abhishek
	chitransh
	satish
	rajan
	naveen
	divyam
	harsh
	

q. uniq - uniq is the tool that helps to detect the adjacent duplicate lines and also deletes the           duplicate lines
   cat kt.txt
I love music.
I love music.
I love music.
I love cricket.
I love music.


r. history

s. which --> Check exsistance of command
	which useradd
	which echo

t. wget --> To download files from internet/any intranet url.

u. uptime
   hostname
   cat /etc/redht-realese
   hostname
   hostnamectl
   ifconfig

v. cut - cut command used to extract parts of the each line from a file.
	 It will extract the parts of the line based
		- byte/character based
		- field based on delimeter (By default the delimeter is tab)

   i. Get first character from a file
	cut -c 1 /etc/passwd
	cut -b 1 /etc/passwd

   ii. Get the characeters from all the lines from 1-10 characters of a file
	cut -c 1-10 /etc/passwd
	cut -c -10 /etc/passwd

   iii. Get the characters some particular range
	cut -c 2-3, 10-12 /etc/passwd
	cut -c 1- /etc/passwd


	one	two	three
	four	five	six
	seven	eight	nine

    iv. Fetch fields of particular files using field seperator
	cut -f 1,3 samp.out
	cut -f 1 samp.out

     v. If delemeter is other than tab
	
	one;two;three
	four;five;six
	seven;eight;nine

	cut -d ';' -f 1 samp.out

	cut -d ':' -f 1,4 /etc/passwd

    vi. Replace the delemeter in output with different delimeter
	cut -d ':' -f 1,4 /etc/passwd --output-delimeter=' '

    vii. Fetch httpd version alone using cut command
	httpd -v | grep -i version | cut -d '/' -f 2 | cut -d ' ' -f 1

w. awk - It's a shell script used to process the command text
	fristName       lastName        age     city       ID

	Thomas          Shelby          30      Rio        400
	Omega           Night           45      Ontario    600
	Wood            Tinker          54      Lisbon     N/A
	Giorgos         Georgiou        35      London     300
	Timmy           Turner          32      Berlin     N/A	

	cat samp.txt | awk '{print $1, $4}'

x. free -h
   df -h
   du -sh
   
y. find - useful to check where exactly particular file/folder presents on the machine.
	find / -name aws
	
z. top

aa. create a user with default home directory
	useradd anusha
	passwd anusha
     
    create a user with custom home directory
    	useradd -d /data/anusha chaitanya

    change passwd
	passwd chaitanya

    The created userid details are stored in a file called /etc/passwd

    Whenever we create a user by default one group also will gets created if group not exists.

    To create user & add it under particular group
	useradd -g tecmint tarunika

    To add users in particular groups
	groupadd admins
	groupadd webadmin
	groupadd developers
	usermod -a -G admins,webadmin,developers tecmint
	useradd -G admins,webadmin,developers paddy	

ab. Normally we do three types of operations on files/folder
	r 	w 	x
     
    The chmod permissions
	r - 4
	w - 2
	x - 1
	 600
	 rw------
	rw-rw-r-x
	u  g  p
	
     create a file /tmp directory
	echo "Checking the permissions of users/groups/public" > /tmp/abc.out
	chmod 400 /tmp/abc.out
	
	Now only the owner have read privileges & try to access the /tmp/abc.out with different user           privilges error will get.

ac. Install pkgs
	yum list all
	yum list all installed
	yum install -y git
	yum remove git -y
	yum updte -y
	yum install nginx -y
	
	
	apt-get for ubuntu inplace of ubuntu
		
ad. winscp
	
ae. sed - SED command in UNIX stands for stream editor and it can perform lots of functions on file           like 
		searching, 
		find and replace, 
		insertion or deletion.

	unix is great os. unix is opensource. unix is free os.
	learn operating system.
	unix linux which one you choose.
	unix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.
        
	i. Replace first occurance of unix in a file
	   sed 's/unix/linux/' temp.txt
	
	   s --> substitution.
	   Replaces all the first occurances of unix pattern in all the lines.

	ii. Replace second occurances of unix in a file
		sed 's/unix/linux/2' temp.txt

	iii. Replace alloccurances of unix in a file
		sed 's/unix/linux/g' temp.txt
	
17. softlink & hard link

	inode:- address of the file where exactly its stored on harddisk

	hardlink - The original & hardlink file will have same inode
			   If we delete any file we can access other file also
			   ln samp hardlink

	softlink - The original & softlink file will have different inode
			   If we delete original file the softlink can't be accessed.
				ln -s samp softlink
				rm softlink	
	

18. zip
	zip -r backup.zip backup
	tar -cvf backup.tar /home/devloper1/backup/
	tar -czvf backup.tar.gz /home/developer1/backup/

	c - create archive file
	v - verbose
	f - file
	Z- compress

	unzip
	unzip backup.zip
	tar -xzvf backup.tar.gz

=========
Day-3
===========
#!/bin/bash
wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.63/bin/apache-tomcat-9.0.63.tar.gz
tar -xzvf apache-tomcat-9.0.63.tar.gz
mv apache-tomcat-9.0.63 tomcat9
rm -rf apache-tomcat-9.0.63.tar.gz

1. Execute above commands in shell script
2. Variabilize the tomcat version
3. Variabilize required tomcat version
4. Pass the version values from argument during shell script execution

===============================================
Command line arguments or positional arguments
===============================================
Command line arguments are the arugments/values passed during shell script execution on the         command prompt.

#!/bin/bash
echo $y

#/bin/bash
echo $1
echo $2
echo $3

./cmd_arg.sh

./cmd_arg.sh 10 20 30

./cmd_arg.sh 10 20 30 40 50

./cmd_arg.sh hello chaitanya ahmed

#/bin/bash
echo $0
echo $1
echo $2
echo $3

./cmd_arg.sh hello chaitanya ahmed
o/p:- cmd_arg.sh hello chaitanya ahmed

$# --> Print the total number of arguments
$* & $@ --> Display all the command line arguments

#/bin/bash
echo $0
echo $1
echo $2
echo $3
#echo $10
echo ${10}



 
################
Input & output commands for shell script
################
create a shell script to convert small letters to uppercase
#!/bin/bash
myname="ChAitanya"
myname_up=${myname^^}
echo "My name in uppercase is: ${myname_up}"

Here the echo command is the output command which is always displaying output.


uc2: create a shell script to convert small letters to uppercase by taking any input value

#!/bin/bash
read myname
#myname="ChAitanya"
myname_up=${myname^^}
echo "My name in uppercase is: ${myname_up}"


uc3:- convert small letters to uppercase by taking any input value & display message read details
#!/bin/bash
read -p "My name is": myname
echo $REPLY
#myname="ChAitanya"
myname_up=${myname^^}
echo "My name in uppercase is: ${myname_up}"

REPLY is the default command for the read command.


UC4:- Enter the tomcat version by prompting
#!/bin/bash
tomcat_ver=9.0.27
read -p "Enter tomcat version:" tomcat_ver
wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.63/bin/apache-tomcat-9.0.63.tar.gz
tar -xzvf apache-tomcat-9.0.63.tar.gz
mv apache-tomcat-9.0.63 tomcat9
rm -rf apache-tomcat-9.0.63.tar.gz


#####################
Arthmetic opearaters in shell scripts
####################
In shell script by default the variables will be treated as string and not integers.
So this makes us some complexity while comparing strings/numbers during loops/conditional statements.

uc1:- For doing integer arthmetic operation we use "(( ))" parenthesis
	x=20
	y=10

	((sum=x+y))  echo $sum --> 30
	((sub=x-y))   echo $sub --> 10
	((mul=x*y))
	((div=x/y))
	((rem=x%y))
	((x=x++))
	((x=x--))
	((x=x+10))
	((x=2+1))

uc2:- For doing float arthmetic operation we use bc
	x=2.5
	y=3.2
	
	bc<<<"$x+$y"
	5.7
	
	x=26
	y=8995
	
	bc<<<"$y/x"
	bc<<<"scale=1;$y/$x"
	bc<<<"scale=2;$y/$x"
	myresult=$(bc<<<"scale=2;$y/$x")

uc3:- Create a shell script for sum operations
	#/bin/bash
	x=1
	y=2
	((sum=x+y))
	echo "$sum"

uc4:- Read data from command line
	#/bin/bash
	read -p "Enter x value:" x
	read -p "Enter y value:" y
	((sum=x+y))
	echo "$sum"
	
uc5:-	If x & y are float values

	#/bin/bash
	read -p "Enter x value:" x
	read -p "Enter y value:" y
	sum=$(bc<<<"scale=2;$x+y")
	echo $sum






 

------seq
bc
less
tar
zip
unzip
curl
file
stat
In
sed
cut
last
paste
du
df
netstat
find
